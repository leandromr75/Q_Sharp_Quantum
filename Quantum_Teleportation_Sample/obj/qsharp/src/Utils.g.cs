//------------------------------------------------------------------------------
// <auto-generated>                                                             
//     This code was generated by a tool.                                       
//     Changes to this file may cause incorrect behavior and will be lost if    
//     the code is regenerated.                                                 
// </auto-generated>                                                            
//------------------------------------------------------------------------------
#pragma warning disable 162
#pragma warning disable 1591
using System;
using Microsoft.Quantum.Core;
using Microsoft.Quantum.Intrinsic;
using Microsoft.Quantum.Simulation.Core;

[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Samples.Teleportation\",\"Name\":\"SetToPlus\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:/Users/TI/Desktop/Quantum_Teleportation_Sample/Utils.qs\",\"Position\":{\"Item1\":12,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":20}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"q\"]},\"Type\":{\"Case\":\"Qubit\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":21},\"Item2\":{\"Line\":1,\"Column\":22}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"Qubit\"},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[\" # Summary\",\" Sets the qubit's state to |+⟩.\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Samples.Teleportation\",\"Name\":\"SetToPlus\"},\"Attributes\":[],\"SourceFile\":\"C:/Users/TI/Desktop/Quantum_Teleportation_Sample/Utils.qs\",\"Position\":{\"Item1\":12,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":20}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Samples.Teleportation\",\"Name\":\"SetToMinus\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:/Users/TI/Desktop/Quantum_Teleportation_Sample/Utils.qs\",\"Position\":{\"Item1\":19,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":21}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"q\"]},\"Type\":{\"Case\":\"Qubit\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":22},\"Item2\":{\"Line\":1,\"Column\":23}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"Qubit\"},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[\" # Summary\",\" Sets the qubit's state to |−⟩.\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Samples.Teleportation\",\"Name\":\"SetToMinus\"},\"Attributes\":[],\"SourceFile\":\"C:/Users/TI/Desktop/Quantum_Teleportation_Sample/Utils.qs\",\"Position\":{\"Item1\":19,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":21}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Samples.Teleportation\",\"Name\":\"IsPlus\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:/Users/TI/Desktop/Quantum_Teleportation_Sample/Utils.qs\",\"Position\":{\"Item1\":27,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":17}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"q\"]},\"Type\":{\"Case\":\"Qubit\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":18},\"Item2\":{\"Line\":1,\"Column\":19}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"Qubit\"},\"ReturnType\":{\"Case\":\"Bool\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[\" # Summary\",\" Returns true if qubit is |+> (assumes qubit is either |+> or |->)\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Samples.Teleportation\",\"Name\":\"IsPlus\"},\"Attributes\":[],\"SourceFile\":\"C:/Users/TI/Desktop/Quantum_Teleportation_Sample/Utils.qs\",\"Position\":{\"Item1\":27,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":17}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Samples.Teleportation\",\"Name\":\"IsMinus\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:/Users/TI/Desktop/Quantum_Teleportation_Sample/Utils.qs\",\"Position\":{\"Item1\":33,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":18}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"q\"]},\"Type\":{\"Case\":\"Qubit\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":19},\"Item2\":{\"Line\":1,\"Column\":20}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"Qubit\"},\"ReturnType\":{\"Case\":\"Bool\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[\" # Summary\",\" Returns true if qubit is |-> (assumes qubit is either |+> or |->)\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Samples.Teleportation\",\"Name\":\"IsMinus\"},\"Attributes\":[],\"SourceFile\":\"C:/Users/TI/Desktop/Quantum_Teleportation_Sample/Utils.qs\",\"Position\":{\"Item1\":33,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":18}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Samples.Teleportation\",\"Name\":\"PrepareRandomMessage\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:/Users/TI/Desktop/Quantum_Teleportation_Sample/Utils.qs\",\"Position\":{\"Item1\":39,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":31}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"q\"]},\"Type\":{\"Case\":\"Qubit\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":32},\"Item2\":{\"Line\":1,\"Column\":33}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"Qubit\"},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[\" # Summary\",\" Randomly prepares the qubit into |+> or |->\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Samples.Teleportation\",\"Name\":\"PrepareRandomMessage\"},\"Attributes\":[],\"SourceFile\":\"C:/Users/TI/Desktop/Quantum_Teleportation_Sample/Utils.qs\",\"Position\":{\"Item1\":39,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":31}},\"Documentation\":[]}")]
#line hidden
namespace Microsoft.Quantum.Samples.Teleportation
{
    [SourceLocation("C:/Users/TI/Desktop/Quantum_Teleportation_Sample/Utils.qs", OperationFunctor.Body, 13, 20)]
    public partial class SetToPlus : Operation<Qubit, QVoid>, ICallable
    {
        public SetToPlus(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "SetToPlus";
        String ICallable.FullName => "Microsoft.Quantum.Samples.Teleportation.SetToPlus";
        public static OperationInfo<Qubit, QVoid> Info => new OperationInfo<Qubit, QVoid>(typeof(SetToPlus));
        protected ICallable<Qubit, QVoid> MicrosoftQuantumIntrinsicReset
        {
            get;
            set;
        }

        protected IUnitary<Qubit> MicrosoftQuantumIntrinsicH
        {
            get;
            set;
        }

        public override Func<Qubit, QVoid> Body => (__in__) =>
        {
            var q = __in__;
#line 14 "C:/Users/TI/Desktop/Quantum_Teleportation_Sample/Utils.qs"
            MicrosoftQuantumIntrinsicReset.Apply(q);
#line 15 "C:/Users/TI/Desktop/Quantum_Teleportation_Sample/Utils.qs"
            MicrosoftQuantumIntrinsicH.Apply(q);
#line hidden
            return QVoid.Instance;
        }

        ;
        public override void Init()
        {
            this.MicrosoftQuantumIntrinsicReset = this.Factory.Get<ICallable<Qubit, QVoid>>(typeof(Microsoft.Quantum.Intrinsic.Reset));
            this.MicrosoftQuantumIntrinsicH = this.Factory.Get<IUnitary<Qubit>>(typeof(Microsoft.Quantum.Intrinsic.H));
        }

        public override IApplyData __dataIn(Qubit data) => data;
        public override IApplyData __dataOut(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, Qubit q)
        {
            return __m__.Run<SetToPlus, Qubit, QVoid>(q);
        }
    }

    [SourceLocation("C:/Users/TI/Desktop/Quantum_Teleportation_Sample/Utils.qs", OperationFunctor.Body, 20, 28)]
    public partial class SetToMinus : Operation<Qubit, QVoid>, ICallable
    {
        public SetToMinus(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "SetToMinus";
        String ICallable.FullName => "Microsoft.Quantum.Samples.Teleportation.SetToMinus";
        public static OperationInfo<Qubit, QVoid> Info => new OperationInfo<Qubit, QVoid>(typeof(SetToMinus));
        protected ICallable<Qubit, QVoid> MicrosoftQuantumIntrinsicReset
        {
            get;
            set;
        }

        protected IUnitary<Qubit> MicrosoftQuantumIntrinsicX
        {
            get;
            set;
        }

        protected IUnitary<Qubit> MicrosoftQuantumIntrinsicH
        {
            get;
            set;
        }

        public override Func<Qubit, QVoid> Body => (__in__) =>
        {
            var q = __in__;
#line 21 "C:/Users/TI/Desktop/Quantum_Teleportation_Sample/Utils.qs"
            MicrosoftQuantumIntrinsicReset.Apply(q);
#line 22 "C:/Users/TI/Desktop/Quantum_Teleportation_Sample/Utils.qs"
            MicrosoftQuantumIntrinsicX.Apply(q);
#line 23 "C:/Users/TI/Desktop/Quantum_Teleportation_Sample/Utils.qs"
            MicrosoftQuantumIntrinsicH.Apply(q);
#line hidden
            return QVoid.Instance;
        }

        ;
        public override void Init()
        {
            this.MicrosoftQuantumIntrinsicReset = this.Factory.Get<ICallable<Qubit, QVoid>>(typeof(Microsoft.Quantum.Intrinsic.Reset));
            this.MicrosoftQuantumIntrinsicX = this.Factory.Get<IUnitary<Qubit>>(typeof(Microsoft.Quantum.Intrinsic.X));
            this.MicrosoftQuantumIntrinsicH = this.Factory.Get<IUnitary<Qubit>>(typeof(Microsoft.Quantum.Intrinsic.H));
        }

        public override IApplyData __dataIn(Qubit data) => data;
        public override IApplyData __dataOut(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, Qubit q)
        {
            return __m__.Run<SetToMinus, Qubit, QVoid>(q);
        }
    }

    [SourceLocation("C:/Users/TI/Desktop/Quantum_Teleportation_Sample/Utils.qs", OperationFunctor.Body, 28, 34)]
    public partial class IsPlus : Operation<Qubit, Boolean>, ICallable
    {
        public IsPlus(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "IsPlus";
        String ICallable.FullName => "Microsoft.Quantum.Samples.Teleportation.IsPlus";
        public static OperationInfo<Qubit, Boolean> Info => new OperationInfo<Qubit, Boolean>(typeof(IsPlus));
        protected ICallable<(IQArray<Pauli>,IQArray<Qubit>), Result> MicrosoftQuantumIntrinsicMeasure
        {
            get;
            set;
        }

        public override Func<Qubit, Boolean> Body => (__in__) =>
        {
            var q = __in__;
#line 29 "C:/Users/TI/Desktop/Quantum_Teleportation_Sample/Utils.qs"
            return (MicrosoftQuantumIntrinsicMeasure.Apply((new QArray<Pauli>(Pauli.PauliX), new QArray<Qubit>(q))) == Result.Zero);
        }

        ;
        public override void Init()
        {
            this.MicrosoftQuantumIntrinsicMeasure = this.Factory.Get<ICallable<(IQArray<Pauli>,IQArray<Qubit>), Result>>(typeof(Microsoft.Quantum.Intrinsic.Measure));
        }

        public override IApplyData __dataIn(Qubit data) => data;
        public override IApplyData __dataOut(Boolean data) => new QTuple<Boolean>(data);
        public static System.Threading.Tasks.Task<Boolean> Run(IOperationFactory __m__, Qubit q)
        {
            return __m__.Run<IsPlus, Qubit, Boolean>(q);
        }
    }

    [SourceLocation("C:/Users/TI/Desktop/Quantum_Teleportation_Sample/Utils.qs", OperationFunctor.Body, 34, 40)]
    public partial class IsMinus : Operation<Qubit, Boolean>, ICallable
    {
        public IsMinus(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "IsMinus";
        String ICallable.FullName => "Microsoft.Quantum.Samples.Teleportation.IsMinus";
        public static OperationInfo<Qubit, Boolean> Info => new OperationInfo<Qubit, Boolean>(typeof(IsMinus));
        protected ICallable<(IQArray<Pauli>,IQArray<Qubit>), Result> MicrosoftQuantumIntrinsicMeasure
        {
            get;
            set;
        }

        public override Func<Qubit, Boolean> Body => (__in__) =>
        {
            var q = __in__;
#line 35 "C:/Users/TI/Desktop/Quantum_Teleportation_Sample/Utils.qs"
            return (MicrosoftQuantumIntrinsicMeasure.Apply((new QArray<Pauli>(Pauli.PauliX), new QArray<Qubit>(q))) == Result.One);
        }

        ;
        public override void Init()
        {
            this.MicrosoftQuantumIntrinsicMeasure = this.Factory.Get<ICallable<(IQArray<Pauli>,IQArray<Qubit>), Result>>(typeof(Microsoft.Quantum.Intrinsic.Measure));
        }

        public override IApplyData __dataIn(Qubit data) => data;
        public override IApplyData __dataOut(Boolean data) => new QTuple<Boolean>(data);
        public static System.Threading.Tasks.Task<Boolean> Run(IOperationFactory __m__, Qubit q)
        {
            return __m__.Run<IsMinus, Qubit, Boolean>(q);
        }
    }

    [SourceLocation("C:/Users/TI/Desktop/Quantum_Teleportation_Sample/Utils.qs", OperationFunctor.Body, 40, -1)]
    public partial class PrepareRandomMessage : Operation<Qubit, QVoid>, ICallable
    {
        public PrepareRandomMessage(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "PrepareRandomMessage";
        String ICallable.FullName => "Microsoft.Quantum.Samples.Teleportation.PrepareRandomMessage";
        public static OperationInfo<Qubit, QVoid> Info => new OperationInfo<Qubit, QVoid>(typeof(PrepareRandomMessage));
        protected ICallable<Int64, Int64> MicrosoftQuantumMathRandomInt
        {
            get;
            set;
        }

        protected ICallable<String, QVoid> MicrosoftQuantumIntrinsicMessage
        {
            get;
            set;
        }

        protected ICallable<Qubit, QVoid> SetToMinus
        {
            get;
            set;
        }

        protected ICallable<Qubit, QVoid> SetToPlus
        {
            get;
            set;
        }

        public override Func<Qubit, QVoid> Body => (__in__) =>
        {
            var q = __in__;
#line 41 "C:/Users/TI/Desktop/Quantum_Teleportation_Sample/Utils.qs"
            var choice = MicrosoftQuantumMathRandomInt.Apply(2L);
#line 43 "C:/Users/TI/Desktop/Quantum_Teleportation_Sample/Utils.qs"
            if ((choice == 0L))
            {
#line 44 "C:/Users/TI/Desktop/Quantum_Teleportation_Sample/Utils.qs"
                MicrosoftQuantumIntrinsicMessage.Apply("Sending |->");
#line 45 "C:/Users/TI/Desktop/Quantum_Teleportation_Sample/Utils.qs"
                SetToMinus.Apply(q);
            }
            else
            {
#line 47 "C:/Users/TI/Desktop/Quantum_Teleportation_Sample/Utils.qs"
                MicrosoftQuantumIntrinsicMessage.Apply("Sending |+>");
#line 48 "C:/Users/TI/Desktop/Quantum_Teleportation_Sample/Utils.qs"
                SetToPlus.Apply(q);
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override void Init()
        {
            this.MicrosoftQuantumMathRandomInt = this.Factory.Get<ICallable<Int64, Int64>>(typeof(Microsoft.Quantum.Math.RandomInt));
            this.MicrosoftQuantumIntrinsicMessage = this.Factory.Get<ICallable<String, QVoid>>(typeof(Microsoft.Quantum.Intrinsic.Message));
            this.SetToMinus = this.Factory.Get<ICallable<Qubit, QVoid>>(typeof(SetToMinus));
            this.SetToPlus = this.Factory.Get<ICallable<Qubit, QVoid>>(typeof(SetToPlus));
        }

        public override IApplyData __dataIn(Qubit data) => data;
        public override IApplyData __dataOut(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, Qubit q)
        {
            return __m__.Run<PrepareRandomMessage, Qubit, QVoid>(q);
        }
    }
}